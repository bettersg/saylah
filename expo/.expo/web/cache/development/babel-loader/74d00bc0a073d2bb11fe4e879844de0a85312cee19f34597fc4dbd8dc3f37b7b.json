{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar FormData = function () {\n  function FormData() {\n    _classCallCheck(this, FormData);\n    this._parts = [];\n  }\n  _createClass(FormData, [{\n    key: \"append\",\n    value: function append(key, value) {\n      this._parts.push([key, value]);\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll(key) {\n      return this._parts.filter(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n          name = _ref2[0];\n        return name === key;\n      }).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          value = _ref4[1];\n        return value;\n      });\n    }\n  }, {\n    key: \"getParts\",\n    value: function getParts() {\n      return this._parts.map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n          name = _ref6[0],\n          value = _ref6[1];\n        var contentDisposition = 'form-data; name=\"' + name + '\"';\n        var headers = {\n          'content-disposition': contentDisposition\n        };\n        if (typeof value === 'object' && !Array.isArray(value) && value) {\n          if (typeof value.name === 'string') {\n            headers['content-disposition'] += '; filename=\"' + value.name + '\"';\n          }\n          if (typeof value.type === 'string') {\n            headers['content-type'] = value.type;\n          }\n          return _objectSpread(_objectSpread({}, value), {}, {\n            headers: headers,\n            fieldName: name\n          });\n        }\n        return {\n          string: String(value),\n          headers: headers,\n          fieldName: name\n        };\n      });\n    }\n  }]);\n  return FormData;\n}();\nmodule.exports = FormData;","map":{"version":3,"names":["_defineProperty","require","_slicedToArray","_classCallCheck","_createClass","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","FormData","_parts","value","append","getAll","_ref","_ref2","name","map","_ref3","_ref4","getParts","_ref5","_ref6","contentDisposition","headers","Array","isArray","type","fieldName","string","String","module","exports"],"sources":["C:/Users/prann/better/saylah/node_modules/react-native/Libraries/Network/FormData.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\ntype FormDataValue = string | {name?: string, type?: string, uri: string};\ntype FormDataNameValuePair = [string, FormDataValue];\n\ntype Headers = {[name: string]: string, ...};\ntype FormDataPart =\n  | {\n      string: string,\n      headers: Headers,\n      ...\n    }\n  | {\n      uri: string,\n      headers: Headers,\n      name?: string,\n      type?: string,\n      ...\n    };\n\n/**\n * Polyfill for XMLHttpRequest2 FormData API, allowing multipart POST requests\n * with mixed data (string, native files) to be submitted via XMLHttpRequest.\n *\n * Example:\n *\n *   var photo = {\n *     uri: uriFromCameraRoll,\n *     type: 'image/jpeg',\n *     name: 'photo.jpg',\n *   };\n *\n *   var body = new FormData();\n *   body.append('authToken', 'secret');\n *   body.append('photo', photo);\n *   body.append('title', 'A beautiful photo!');\n *\n *   xhr.open('POST', serverURL);\n *   xhr.send(body);\n */\nclass FormData {\n  _parts: Array<FormDataNameValuePair>;\n\n  constructor() {\n    this._parts = [];\n  }\n\n  append(key: string, value: FormDataValue) {\n    // The XMLHttpRequest spec doesn't specify if duplicate keys are allowed.\n    // MDN says that any new values should be appended to existing values.\n    // In any case, major browsers allow duplicate keys, so that's what we'll do\n    // too. They'll simply get appended as additional form data parts in the\n    // request body, leaving the server to deal with them.\n    this._parts.push([key, value]);\n  }\n\n  getAll(key: string): Array<FormDataValue> {\n    return this._parts\n      .filter(([name]) => name === key)\n      .map(([, value]) => value);\n  }\n\n  getParts(): Array<FormDataPart> {\n    return this._parts.map(([name, value]) => {\n      const contentDisposition = 'form-data; name=\"' + name + '\"';\n\n      const headers: Headers = {'content-disposition': contentDisposition};\n\n      // The body part is a \"blob\", which in React Native just means\n      // an object with a `uri` attribute. Optionally, it can also\n      // have a `name` and `type` attribute to specify filename and\n      // content type (cf. web Blob interface.)\n      if (typeof value === 'object' && !Array.isArray(value) && value) {\n        if (typeof value.name === 'string') {\n          headers['content-disposition'] += '; filename=\"' + value.name + '\"';\n        }\n        if (typeof value.type === 'string') {\n          headers['content-type'] = value.type;\n        }\n        return {...value, headers, fieldName: name};\n      }\n      // Convert non-object values to strings as per FormData.append() spec\n      return {string: String(value), headers, fieldName: name};\n    });\n  }\n}\n\nmodule.exports = FormData;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}