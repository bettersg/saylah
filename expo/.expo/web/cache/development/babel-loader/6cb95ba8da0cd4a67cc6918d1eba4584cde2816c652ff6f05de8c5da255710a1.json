{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport DecayAnimation from \"./animations/DecayAnimation\";\nimport SpringAnimation from \"./animations/SpringAnimation\";\nimport TimingAnimation from \"./animations/TimingAnimation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport AnimatedAddition from \"./nodes/AnimatedAddition\";\nimport AnimatedColor from \"./nodes/AnimatedColor\";\nimport AnimatedDiffClamp from \"./nodes/AnimatedDiffClamp\";\nimport AnimatedDivision from \"./nodes/AnimatedDivision\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedModulo from \"./nodes/AnimatedModulo\";\nimport AnimatedMultiplication from \"./nodes/AnimatedMultiplication\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedSubtraction from \"./nodes/AnimatedSubtraction\";\nimport AnimatedTracking from \"./nodes/AnimatedTracking\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete.apply(config, arguments);\n      callback && callback.apply(void 0, arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n    var configY = _objectSpread({}, config);\n    for (var key in config) {\n      var _config$key = config[key],\n        x = _config$key.x,\n        y = _config$key.y;\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY);\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  } else if (value instanceof AnimatedColor) {\n    var configR = _objectSpread({}, config);\n    var configG = _objectSpread({}, config);\n    var configB = _objectSpread({}, config);\n    var configA = _objectSpread({}, config);\n    for (var _key in config) {\n      var _config$_key = config[_key],\n        r = _config$_key.r,\n        g = _config$_key.g,\n        b = _config$_key.b,\n        a = _config$_key.a;\n      if (r !== undefined && g !== undefined && b !== undefined && a !== undefined) {\n        configR[_key] = r;\n        configG[_key] = g;\n        configB[_key] = b;\n        configA[_key] = a;\n      }\n    }\n    var aR = anim(value.r, configR);\n    var aG = anim(value.g, configG);\n    var aB = anim(value.b, configB);\n    var aA = anim(value.a, configA);\n    return parallel([aR, aG, aB, aA], {\n      stopTogether: false\n    });\n  }\n  return null;\n};\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n        current++;\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n        animations[current].start(onComplete);\n      };\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0;\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n      animations.forEach(function (animation, idx) {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach(function (animation, idx) {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\nvar delay = function delay(time) {\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map(function (animation, i) {\n    return sequence([delay(time * i), animation]);\n  }));\n};\nvar loop = function loop(animation) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$iterations = _ref.iterations,\n    iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n    _ref$resetBeforeItera = _ref.resetBeforeIteration,\n    resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart() {\n        var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          finished: true\n        };\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart();\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event.apply(void 0, arguments);\n      listener.apply(void 0, arguments);\n    };\n  }\n}\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: add,\n  subtract: subtract,\n  divide: divide,\n  multiply: multiply,\n  modulo: modulo,\n  diffClamp: diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: forkEvent,\n  unforkEvent: unforkEvent,\n  Event: AnimatedEvent\n};","map":{"version":3,"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","AnimatedEvent","attachNativeEvent","DecayAnimation","SpringAnimation","TimingAnimation","createAnimatedComponent","AnimatedAddition","AnimatedColor","AnimatedDiffClamp","AnimatedDivision","AnimatedInterpolation","AnimatedModulo","AnimatedMultiplication","AnimatedNode","AnimatedSubtraction","AnimatedTracking","AnimatedValue","AnimatedValueXY","add","a","b","subtract","divide","multiply","modulo","modulus","diffClamp","min","max","_combineCallbacks","callback","config","onComplete","maybeVectorAnim","value","anim","configX","configY","_config$key","x","y","undefined","aX","aY","parallel","stopTogether","configR","configG","configB","configA","_config$_key","r","g","aR","aG","aB","aA","spring","start","animatedValue","configuration","singleValue","singleConfig","stopTracking","toValue","track","animate","stop","stopAnimation","reset","resetAnimation","_startNativeLoop","iterations","_isUsingNativeDriver","useNativeDriver","timing","decay","sequence","animations","current","result","finished","animation","idx","Error","doneCount","hasEnded","cb","endResult","delay","time","duration","stagger","map","loop","_ref","_ref$iterations","_ref$resetBeforeItera","resetBeforeIteration","isFinished","iterationsSoFar","restart","forkEvent","event","listener","__addListener","unforkEvent","__removeListener","argMapping","animatedEvent","__isNative","__getHandler","Value","ValueXY","Color","Interpolation","Node","Event"],"sources":["C:/Users/prann/better/saylah/node_modules/react-native/Libraries/Animated/AnimatedImplementation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {EventConfig, Mapping} from './AnimatedEvent';\nimport type {\n  AnimationConfig,\n  EndCallback,\n  EndResult,\n} from './animations/Animation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\n\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\nimport DecayAnimation from './animations/DecayAnimation';\nimport SpringAnimation from './animations/SpringAnimation';\nimport TimingAnimation from './animations/TimingAnimation';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport AnimatedAddition from './nodes/AnimatedAddition';\nimport AnimatedColor from './nodes/AnimatedColor';\nimport AnimatedDiffClamp from './nodes/AnimatedDiffClamp';\nimport AnimatedDivision from './nodes/AnimatedDivision';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedModulo from './nodes/AnimatedModulo';\nimport AnimatedMultiplication from './nodes/AnimatedMultiplication';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedSubtraction from './nodes/AnimatedSubtraction';\nimport AnimatedTracking from './nodes/AnimatedTracking';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\n\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n  ...\n};\n\nconst add = function (\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedAddition {\n  return new AnimatedAddition(a, b);\n};\n\nconst subtract = function (\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedSubtraction {\n  return new AnimatedSubtraction(a, b);\n};\n\nconst divide = function (\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedDivision {\n  return new AnimatedDivision(a, b);\n};\n\nconst multiply = function (\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedMultiplication {\n  return new AnimatedMultiplication(a, b);\n};\n\nconst modulo = function (a: AnimatedNode, modulus: number): AnimatedModulo {\n  return new AnimatedModulo(a, modulus);\n};\n\nconst diffClamp = function (\n  a: AnimatedNode,\n  min: number,\n  max: number,\n): AnimatedDiffClamp {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nconst _combineCallbacks = function (\n  callback: ?EndCallback,\n  config: $ReadOnly<{...AnimationConfig, ...}>,\n) {\n  if (callback && config.onComplete) {\n    return (...args: Array<EndResult>) => {\n      config.onComplete && config.onComplete(...args);\n      callback && callback(...args);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nconst maybeVectorAnim = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: Object,\n  anim: (value: AnimatedValue, config: Object) => CompositeAnimation,\n): ?CompositeAnimation {\n  if (value instanceof AnimatedValueXY) {\n    const configX = {...config};\n    const configY = {...config};\n    for (const key in config) {\n      const {x, y} = config[key];\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n    const aX = anim((value: AnimatedValueXY).x, configX);\n    const aY = anim((value: AnimatedValueXY).y, configY);\n    // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n    return parallel([aX, aY], {stopTogether: false});\n  } else if (value instanceof AnimatedColor) {\n    const configR = {...config};\n    const configG = {...config};\n    const configB = {...config};\n    const configA = {...config};\n    for (const key in config) {\n      const {r, g, b, a} = config[key];\n      if (\n        r !== undefined &&\n        g !== undefined &&\n        b !== undefined &&\n        a !== undefined\n      ) {\n        configR[key] = r;\n        configG[key] = g;\n        configB[key] = b;\n        configA[key] = a;\n      }\n    }\n    const aR = anim((value: AnimatedColor).r, configR);\n    const aG = anim((value: AnimatedColor).g, configG);\n    const aB = anim((value: AnimatedColor).b, configB);\n    const aA = anim((value: AnimatedColor).a, configA);\n    // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n    return parallel([aR, aG, aB, aA], {stopTogether: false});\n  }\n  return null;\n};\n\nconst spring = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const start = function (\n    animatedValue: AnimatedValue | AnimatedValueXY | AnimatedColor,\n    configuration: SpringAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(\n        new AnimatedTracking(\n          singleValue,\n          configuration.toValue,\n          SpringAnimation,\n          singleConfig,\n          callback,\n        ),\n      );\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n  return (\n    maybeVectorAnim(value, config, spring) || {\n      start: function (callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function (): void {\n        value.stopAnimation();\n      },\n\n      reset: function (): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function (iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function (): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst timing = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const start = function (\n    animatedValue: AnimatedValue | AnimatedValueXY | AnimatedColor,\n    configuration: TimingAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(\n        new AnimatedTracking(\n          singleValue,\n          configuration.toValue,\n          TimingAnimation,\n          singleConfig,\n          callback,\n        ),\n      );\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return (\n    maybeVectorAnim(value, config, timing) || {\n      start: function (callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function (): void {\n        value.stopAnimation();\n      },\n\n      reset: function (): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function (iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function (): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst decay = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  const start = function (\n    animatedValue: AnimatedValue | AnimatedValueXY | AnimatedColor,\n    configuration: DecayAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return (\n    maybeVectorAnim(value, config, decay) || {\n      start: function (callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function (): void {\n        value.stopAnimation();\n      },\n\n      reset: function (): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function (iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function (): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst sequence = function (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  let current = 0;\n  return {\n    start: function (callback?: ?EndCallback) {\n      const onComplete = function (result: EndResult) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({finished: true});\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n\n    stop: function () {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n\n    reset: function () {\n      animations.forEach((animation, idx) => {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n\n    _startNativeLoop: function () {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.sequence animations',\n      );\n    },\n\n    _isUsingNativeDriver: function (): boolean {\n      return false;\n    },\n  };\n};\n\ntype ParallelConfig = {\n  // If one is stopped, stop all.  default: true\n  stopTogether?: boolean,\n  ...\n};\nconst parallel = function (\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  let doneCount = 0;\n  // Make sure we only call stop() at most once for each animation\n  const hasEnded: {[number]: boolean} = {};\n  const stopTogether = !(config && config.stopTogether === false);\n\n  const result = {\n    start: function (callback?: ?EndCallback) {\n      if (doneCount === animations.length) {\n        callback && callback({finished: true});\n        return;\n      }\n\n      animations.forEach((animation, idx) => {\n        const cb = function (endResult: EndResult | {finished: boolean}) {\n          hasEnded[idx] = true;\n          doneCount++;\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({finished: true});\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n\n    stop: function (): void {\n      animations.forEach((animation, idx) => {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n\n    reset: function (): void {\n      animations.forEach((animation, idx) => {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n\n    _startNativeLoop: function (): empty {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.parallel animations',\n      );\n    },\n\n    _isUsingNativeDriver: function (): boolean {\n      return false;\n    },\n  };\n\n  return result;\n};\n\nconst delay = function (time: number): CompositeAnimation {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false,\n  });\n};\n\nconst stagger = function (\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return parallel(\n    animations.map((animation, i) => {\n      return sequence([delay(time * i), animation]);\n    }),\n  );\n};\n\ntype LoopAnimationConfig = {\n  iterations: number,\n  resetBeforeIteration?: boolean,\n  ...\n};\n\nconst loop = function (\n  animation: CompositeAnimation,\n  // $FlowFixMe[prop-missing]\n  {iterations = -1, resetBeforeIteration = true}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  let isFinished = false;\n  let iterationsSoFar = 0;\n  return {\n    start: function (callback?: ?EndCallback) {\n      const restart = function (result: EndResult = {finished: true}): void {\n        if (\n          isFinished ||\n          iterationsSoFar === iterations ||\n          result.finished === false\n        ) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n      if (!animation || iterations === 0) {\n        callback && callback({finished: true});\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n\n    stop: function (): void {\n      isFinished = true;\n      animation.stop();\n    },\n\n    reset: function (): void {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n\n    _startNativeLoop: function () {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.loop animations',\n      );\n    },\n\n    _isUsingNativeDriver: function (): boolean {\n      return animation._isUsingNativeDriver();\n    },\n  };\n};\n\nfunction forkEvent(\n  event: ?AnimatedEvent | ?Function,\n  listener: Function,\n): AnimatedEvent | Function {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n    return event;\n  } else {\n    return (...args) => {\n      typeof event === 'function' && event(...args);\n      listener(...args);\n    };\n  }\n}\n\nfunction unforkEvent(\n  event: ?AnimatedEvent | ?Function,\n  listener: Function,\n): void {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nconst event = function (\n  argMapping: $ReadOnlyArray<?Mapping>,\n  config: EventConfig,\n): any {\n  const animatedEvent = new AnimatedEvent(argMapping, config);\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n\n// All types of animated nodes that represent scalar numbers and can be interpolated (etc)\ntype AnimatedNumeric =\n  | AnimatedAddition\n  | AnimatedDiffClamp\n  | AnimatedDivision\n  | AnimatedInterpolation<number>\n  | AnimatedModulo\n  | AnimatedMultiplication\n  | AnimatedSubtraction\n  | AnimatedValue;\n\nexport type {AnimatedNumeric as Numeric};\n\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n * If additional transforms are added, be sure to include them in\n * AnimatedMock.js as well.\n *\n * See https://reactnative.dev/docs/animated\n */\nexport default {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See https://reactnative.dev/docs/animated#value\n   */\n  Value: AnimatedValue,\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy\n   */\n  ValueXY: AnimatedValueXY,\n  /**\n   * Value class for driving color animations.\n   */\n  Color: AnimatedColor,\n  /**\n   * Exported to use the Interpolation type in flow.\n   *\n   * See https://reactnative.dev/docs/animated#interpolation\n   */\n  Interpolation: AnimatedInterpolation,\n  /**\n   * Exported for ease of type checking. All animated values derive from this\n   * class.\n   *\n   * See https://reactnative.dev/docs/animated#node\n   */\n  Node: AnimatedNode,\n\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * See https://reactnative.dev/docs/animated#decay\n   */\n  decay,\n  /**\n   * Animates a value along a timed easing curve. The Easing module has tons of\n   * predefined curves, or you can use your own function.\n   *\n   * See https://reactnative.dev/docs/animated#timing\n   */\n  timing,\n  /**\n   * Animates a value according to an analytical spring model based on\n   * damped harmonic oscillation.\n   *\n   * See https://reactnative.dev/docs/animated#spring\n   */\n  spring,\n\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated#add\n   */\n  add,\n\n  /**\n   * Creates a new Animated value composed by subtracting the second Animated\n   * value from the first Animated value.\n   *\n   * See https://reactnative.dev/docs/animated#subtract\n   */\n  subtract,\n\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   *\n   * See https://reactnative.dev/docs/animated#divide\n   */\n  divide,\n\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated#multiply\n   */\n  multiply,\n\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value.\n   *\n   * See https://reactnative.dev/docs/animated#modulo\n   */\n  modulo,\n\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the\n   * bounds it will start changing when the value starts getting closer again.\n   *\n   * See https://reactnative.dev/docs/animated#diffclamp\n   */\n  diffClamp,\n\n  /**\n   * Starts an animation after the given delay.\n   *\n   * See https://reactnative.dev/docs/animated#delay\n   */\n  delay,\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next. If the current running animation is stopped, no\n   * following animations will be started.\n   *\n   * See https://reactnative.dev/docs/animated#sequence\n   */\n  sequence,\n  /**\n   * Starts an array of animations all at the same time. By default, if one\n   * of the animations is stopped, they will all be stopped. You can override\n   * this with the `stopTogether` flag.\n   *\n   * See https://reactnative.dev/docs/animated#parallel\n   */\n  parallel,\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   *\n   * See https://reactnative.dev/docs/animated#stagger\n   */\n  stagger,\n  /**\n   * Loops a given animation continuously, so that each time it reaches the\n   * end, it resets and begins again from the start.\n   *\n   * See https://reactnative.dev/docs/animated#loop\n   */\n  loop,\n\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.\n   *\n   * See https://reactnative.dev/docs/animated#event\n   */\n  event,\n\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   *\n   * See https://reactnative.dev/docs/animated#createanimatedcomponent\n   */\n  createAnimatedComponent,\n\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer\n   * using `Animated.event` with `useNativeDrive: true` if possible.\n   *\n   * See https://reactnative.dev/docs/animated#attachnativeevent\n   */\n  attachNativeEvent,\n\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in\n   * through props. Use values directly where possible.\n   *\n   * See https://reactnative.dev/docs/animated#forkevent\n   */\n  forkEvent,\n  unforkEvent,\n\n  /**\n   * Expose Event class, so it can be used as a type for type checkers.\n   */\n  Event: AnimatedEvent,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}