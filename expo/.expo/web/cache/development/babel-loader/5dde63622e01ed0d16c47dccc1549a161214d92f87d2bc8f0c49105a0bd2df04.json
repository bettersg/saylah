{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport normalizeColor from \"../../StyleSheet/normalizeColor\";\nimport { processColorObject } from \"../../StyleSheet/PlatformColorValueTypes\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport AnimatedValue from \"./AnimatedValue\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nvar defaultColor = {\n  r: 0,\n  g: 0,\n  b: 0,\n  a: 1.0\n};\nvar _uniqueId = 1;\nfunction processColor(color) {\n  if (color === undefined || color === null) {\n    return null;\n  }\n  if (isRgbaValue(color)) {\n    return color;\n  }\n  var normalizedColor = normalizeColor(color);\n  if (normalizedColor === undefined || normalizedColor === null) {\n    return null;\n  }\n  if (typeof normalizedColor === 'object') {\n    var processedColorObj = processColorObject(normalizedColor);\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  } else if (typeof normalizedColor === 'number') {\n    var r = (normalizedColor & 0xff000000) >>> 24;\n    var g = (normalizedColor & 0x00ff0000) >>> 16;\n    var b = (normalizedColor & 0x0000ff00) >>> 8;\n    var a = (normalizedColor & 0x000000ff) / 255;\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  }\n  return null;\n}\nfunction isRgbaValue(value) {\n  return value && typeof value.r === 'number' && typeof value.g === 'number' && typeof value.b === 'number' && typeof value.a === 'number';\n}\nfunction isRgbaAnimatedValue(value) {\n  return value && value.r instanceof AnimatedValue && value.g instanceof AnimatedValue && value.b instanceof AnimatedValue && value.a instanceof AnimatedValue;\n}\nvar AnimatedColor = function (_AnimatedWithChildren) {\n  _inherits(AnimatedColor, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedColor);\n  function AnimatedColor(valueIn, config) {\n    var _this;\n    _classCallCheck(this, AnimatedColor);\n    _this = _super.call(this);\n    _this._listeners = {};\n    var value = valueIn != null ? valueIn : defaultColor;\n    if (isRgbaAnimatedValue(value)) {\n      var rgbaAnimatedValue = value;\n      _this.r = rgbaAnimatedValue.r;\n      _this.g = rgbaAnimatedValue.g;\n      _this.b = rgbaAnimatedValue.b;\n      _this.a = rgbaAnimatedValue.a;\n    } else {\n      var _processColor;\n      var processedColor = (_processColor = processColor(value)) != null ? _processColor : defaultColor;\n      var initColor = defaultColor;\n      if (isRgbaValue(processedColor)) {\n        initColor = processedColor;\n      } else {\n        _this.nativeColor = processedColor;\n      }\n      _this.r = new AnimatedValue(initColor.r);\n      _this.g = new AnimatedValue(initColor.g);\n      _this.b = new AnimatedValue(initColor.b);\n      _this.a = new AnimatedValue(initColor.a);\n    }\n    if (_this.nativeColor || config && config.useNativeDriver) {\n      _this.__makeNative();\n    }\n    return _this;\n  }\n  _createClass(AnimatedColor, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      var _processColor2;\n      var shouldUpdateNodeConfig = false;\n      if (this.__isNative) {\n        var nativeTag = this.__getNativeTag();\n        NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());\n      }\n      var processedColor = (_processColor2 = processColor(value)) != null ? _processColor2 : defaultColor;\n      if (isRgbaValue(processedColor)) {\n        var rgbaValue = processedColor;\n        this.r.setValue(rgbaValue.r);\n        this.g.setValue(rgbaValue.g);\n        this.b.setValue(rgbaValue.b);\n        this.a.setValue(rgbaValue.a);\n        if (this.nativeColor != null) {\n          this.nativeColor = null;\n          shouldUpdateNodeConfig = true;\n        }\n      } else {\n        var nativeColor = processedColor;\n        if (this.nativeColor !== nativeColor) {\n          this.nativeColor = nativeColor;\n          shouldUpdateNodeConfig = true;\n        }\n      }\n      if (this.__isNative) {\n        var _nativeTag = this.__getNativeTag();\n        if (shouldUpdateNodeConfig) {\n          NativeAnimatedAPI.updateAnimatedNodeConfig(_nativeTag, this.__getNativeConfig());\n        }\n        NativeAnimatedAPI.unsetWaitingForIdentifier(_nativeTag.toString());\n      }\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offset) {\n      this.r.setOffset(offset.r);\n      this.g.setOffset(offset.g);\n      this.b.setOffset(offset.b);\n      this.a.setOffset(offset.a);\n    }\n  }, {\n    key: \"flattenOffset\",\n    value: function flattenOffset() {\n      this.r.flattenOffset();\n      this.g.flattenOffset();\n      this.b.flattenOffset();\n      this.a.flattenOffset();\n    }\n  }, {\n    key: \"extractOffset\",\n    value: function extractOffset() {\n      this.r.extractOffset();\n      this.g.extractOffset();\n      this.b.extractOffset();\n      this.a.extractOffset();\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(callback) {\n      var _this2 = this;\n      var id = String(_uniqueId++);\n      var jointCallback = function jointCallback(_ref) {\n        var number = _ref.value;\n        callback(_this2.__getValue());\n      };\n      this._listeners[id] = {\n        r: this.r.addListener(jointCallback),\n        g: this.g.addListener(jointCallback),\n        b: this.b.addListener(jointCallback),\n        a: this.a.addListener(jointCallback)\n      };\n      return id;\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(id) {\n      this.r.removeListener(this._listeners[id].r);\n      this.g.removeListener(this._listeners[id].g);\n      this.b.removeListener(this._listeners[id].b);\n      this.a.removeListener(this._listeners[id].a);\n      delete this._listeners[id];\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners() {\n      this.r.removeAllListeners();\n      this.g.removeAllListeners();\n      this.b.removeAllListeners();\n      this.a.removeAllListeners();\n      this._listeners = {};\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation(callback) {\n      this.r.stopAnimation();\n      this.g.stopAnimation();\n      this.b.stopAnimation();\n      this.a.stopAnimation();\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"resetAnimation\",\n    value: function resetAnimation(callback) {\n      this.r.resetAnimation();\n      this.g.resetAnimation();\n      this.b.resetAnimation();\n      this.a.resetAnimation();\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      if (this.nativeColor != null) {\n        return this.nativeColor;\n      } else {\n        return \"rgba(\" + this.r.__getValue() + \", \" + this.g.__getValue() + \", \" + this.b.__getValue() + \", \" + this.a.__getValue() + \")\";\n      }\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this.r.__addChild(this);\n      this.g.__addChild(this);\n      this.b.__addChild(this);\n      this.a.__addChild(this);\n      _get(_getPrototypeOf(AnimatedColor.prototype), \"__attach\", this).call(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this.r.__removeChild(this);\n      this.g.__removeChild(this);\n      this.b.__removeChild(this);\n      this.a.__removeChild(this);\n      _get(_getPrototypeOf(AnimatedColor.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__makeNative\",\n    value: function __makeNative(platformConfig) {\n      this.r.__makeNative(platformConfig);\n      this.g.__makeNative(platformConfig);\n      this.b.__makeNative(platformConfig);\n      this.a.__makeNative(platformConfig);\n      _get(_getPrototypeOf(AnimatedColor.prototype), \"__makeNative\", this).call(this, platformConfig);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: 'color',\n        r: this.r.__getNativeTag(),\n        g: this.g.__getNativeTag(),\n        b: this.b.__getNativeTag(),\n        a: this.a.__getNativeTag(),\n        nativeColor: this.nativeColor\n      };\n    }\n  }]);\n  return AnimatedColor;\n}(AnimatedWithChildren);\nexport { AnimatedColor as default };","map":{"version":3,"names":["_classCallCheck","_createClass","_get","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","normalizeColor","processColorObject","NativeAnimatedHelper","AnimatedValue","AnimatedWithChildren","NativeAnimatedAPI","API","defaultColor","r","g","b","a","_uniqueId","processColor","color","undefined","isRgbaValue","normalizedColor","processedColorObj","value","isRgbaAnimatedValue","AnimatedColor","_AnimatedWithChildren","_super","valueIn","config","_this","_listeners","rgbaAnimatedValue","_processColor","processedColor","initColor","nativeColor","useNativeDriver","__makeNative","key","setValue","_processColor2","shouldUpdateNodeConfig","__isNative","nativeTag","__getNativeTag","setWaitingForIdentifier","toString","rgbaValue","updateAnimatedNodeConfig","__getNativeConfig","unsetWaitingForIdentifier","setOffset","offset","flattenOffset","extractOffset","addListener","callback","_this2","id","String","jointCallback","_ref","number","__getValue","removeListener","removeAllListeners","stopAnimation","resetAnimation","__attach","__addChild","__detach","__removeChild","platformConfig","type","default"],"sources":["C:/Users/prann/better/saylah/node_modules/react-native/Libraries/Animated/nodes/AnimatedColor.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {NativeColorValue} from '../../StyleSheet/PlatformColorValueTypes';\nimport type {ProcessedColorValue} from '../../StyleSheet/processColor';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport normalizeColor from '../../StyleSheet/normalizeColor';\nimport {processColorObject} from '../../StyleSheet/PlatformColorValueTypes';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport type AnimatedColorConfig = $ReadOnly<{\n  useNativeDriver: boolean,\n}>;\n\ntype ColorListenerCallback = (value: ColorValue) => mixed;\n\nexport type RgbaValue = {\n  +r: number,\n  +g: number,\n  +b: number,\n  +a: number,\n  ...\n};\n\ntype RgbaAnimatedValue = {\n  +r: AnimatedValue,\n  +g: AnimatedValue,\n  +b: AnimatedValue,\n  +a: AnimatedValue,\n  ...\n};\n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\nconst defaultColor: RgbaValue = {r: 0, g: 0, b: 0, a: 1.0};\nlet _uniqueId = 1;\n\n/* eslint no-bitwise: 0 */\nfunction processColor(\n  color?: ?(ColorValue | RgbaValue),\n): ?(RgbaValue | NativeColorValue) {\n  if (color === undefined || color === null) {\n    return null;\n  }\n\n  if (isRgbaValue(color)) {\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    return (color: RgbaValue);\n  }\n\n  let normalizedColor: ?ProcessedColorValue = normalizeColor(\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    (color: ColorValue),\n  );\n  if (normalizedColor === undefined || normalizedColor === null) {\n    return null;\n  }\n\n  if (typeof normalizedColor === 'object') {\n    const processedColorObj: ?NativeColorValue =\n      processColorObject(normalizedColor);\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  } else if (typeof normalizedColor === 'number') {\n    const r: number = (normalizedColor & 0xff000000) >>> 24;\n    const g: number = (normalizedColor & 0x00ff0000) >>> 16;\n    const b: number = (normalizedColor & 0x0000ff00) >>> 8;\n    const a: number = (normalizedColor & 0x000000ff) / 255;\n\n    return {r, g, b, a};\n  }\n\n  return null;\n}\n\nfunction isRgbaValue(value: any): boolean {\n  return (\n    value &&\n    typeof value.r === 'number' &&\n    typeof value.g === 'number' &&\n    typeof value.b === 'number' &&\n    typeof value.a === 'number'\n  );\n}\n\nfunction isRgbaAnimatedValue(value: any): boolean {\n  return (\n    value &&\n    value.r instanceof AnimatedValue &&\n    value.g instanceof AnimatedValue &&\n    value.b instanceof AnimatedValue &&\n    value.a instanceof AnimatedValue\n  );\n}\n\nexport default class AnimatedColor extends AnimatedWithChildren {\n  r: AnimatedValue;\n  g: AnimatedValue;\n  b: AnimatedValue;\n  a: AnimatedValue;\n  nativeColor: ?NativeColorValue;\n  _listeners: {\n    [key: string]: {\n      r: string,\n      g: string,\n      b: string,\n      a: string,\n      ...\n    },\n    ...\n  } = {};\n\n  constructor(\n    valueIn?: ?(RgbaValue | RgbaAnimatedValue | ColorValue),\n    config?: ?AnimatedColorConfig,\n  ) {\n    super();\n    let value: RgbaValue | RgbaAnimatedValue | ColorValue =\n      valueIn ?? defaultColor;\n    if (isRgbaAnimatedValue(value)) {\n      // $FlowIgnore[incompatible-cast] - Type is verified above\n      const rgbaAnimatedValue: RgbaAnimatedValue = (value: RgbaAnimatedValue);\n      this.r = rgbaAnimatedValue.r;\n      this.g = rgbaAnimatedValue.g;\n      this.b = rgbaAnimatedValue.b;\n      this.a = rgbaAnimatedValue.a;\n    } else {\n      const processedColor: RgbaValue | NativeColorValue =\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        processColor((value: ColorValue | RgbaValue)) ?? defaultColor;\n      let initColor: RgbaValue = defaultColor;\n      if (isRgbaValue(processedColor)) {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        initColor = (processedColor: RgbaValue);\n      } else {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        this.nativeColor = (processedColor: NativeColorValue);\n      }\n\n      this.r = new AnimatedValue(initColor.r);\n      this.g = new AnimatedValue(initColor.g);\n      this.b = new AnimatedValue(initColor.b);\n      this.a = new AnimatedValue(initColor.a);\n    }\n    if (this.nativeColor || (config && config.useNativeDriver)) {\n      this.__makeNative();\n    }\n  }\n\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   */\n  setValue(value: RgbaValue | ColorValue): void {\n    let shouldUpdateNodeConfig = false;\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());\n    }\n\n    const processedColor: RgbaValue | NativeColorValue =\n      processColor(value) ?? defaultColor;\n    if (isRgbaValue(processedColor)) {\n      // $FlowIgnore[incompatible-type] - Type is verified above\n      const rgbaValue: RgbaValue = processedColor;\n      this.r.setValue(rgbaValue.r);\n      this.g.setValue(rgbaValue.g);\n      this.b.setValue(rgbaValue.b);\n      this.a.setValue(rgbaValue.a);\n      if (this.nativeColor != null) {\n        this.nativeColor = null;\n        shouldUpdateNodeConfig = true;\n      }\n    } else {\n      // $FlowIgnore[incompatible-type] - Type is verified above\n      const nativeColor: NativeColorValue = processedColor;\n      if (this.nativeColor !== nativeColor) {\n        this.nativeColor = nativeColor;\n        shouldUpdateNodeConfig = true;\n      }\n    }\n\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      if (shouldUpdateNodeConfig) {\n        NativeAnimatedAPI.updateAnimatedNodeConfig(\n          nativeTag,\n          this.__getNativeConfig(),\n        );\n      }\n      NativeAnimatedAPI.unsetWaitingForIdentifier(nativeTag.toString());\n    }\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   */\n  setOffset(offset: RgbaValue): void {\n    this.r.setOffset(offset.r);\n    this.g.setOffset(offset.g);\n    this.b.setOffset(offset.b);\n    this.a.setOffset(offset.a);\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   */\n  flattenOffset(): void {\n    this.r.flattenOffset();\n    this.g.flattenOffset();\n    this.b.flattenOffset();\n    this.a.flattenOffset();\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   */\n  extractOffset(): void {\n    this.r.extractOffset();\n    this.g.extractOffset();\n    this.b.extractOffset();\n    this.a.extractOffset();\n  }\n\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to synchronously read\n   * the value because it might be driven natively.\n   *\n   * Returns a string that serves as an identifier for the listener.\n   */\n  addListener(callback: ColorListenerCallback): string {\n    const id = String(_uniqueId++);\n    const jointCallback = ({value: number}: any) => {\n      callback(this.__getValue());\n    };\n    this._listeners[id] = {\n      r: this.r.addListener(jointCallback),\n      g: this.g.addListener(jointCallback),\n      b: this.b.addListener(jointCallback),\n      a: this.a.addListener(jointCallback),\n    };\n    return id;\n  }\n\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   */\n  removeListener(id: string): void {\n    this.r.removeListener(this._listeners[id].r);\n    this.g.removeListener(this._listeners[id].g);\n    this.b.removeListener(this._listeners[id].b);\n    this.a.removeListener(this._listeners[id].a);\n    delete this._listeners[id];\n  }\n\n  /**\n   * Remove all registered listeners.\n   */\n  removeAllListeners(): void {\n    this.r.removeAllListeners();\n    this.g.removeAllListeners();\n    this.b.removeAllListeners();\n    this.a.removeAllListeners();\n    this._listeners = {};\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   */\n  stopAnimation(callback?: ColorListenerCallback): void {\n    this.r.stopAnimation();\n    this.g.stopAnimation();\n    this.b.stopAnimation();\n    this.a.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   */\n  resetAnimation(callback?: ColorListenerCallback): void {\n    this.r.resetAnimation();\n    this.g.resetAnimation();\n    this.b.resetAnimation();\n    this.a.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  __getValue(): ColorValue {\n    if (this.nativeColor != null) {\n      return this.nativeColor;\n    } else {\n      return `rgba(${this.r.__getValue()}, ${this.g.__getValue()}, ${this.b.__getValue()}, ${this.a.__getValue()})`;\n    }\n  }\n\n  __attach(): void {\n    this.r.__addChild(this);\n    this.g.__addChild(this);\n    this.b.__addChild(this);\n    this.a.__addChild(this);\n    super.__attach();\n  }\n\n  __detach(): void {\n    this.r.__removeChild(this);\n    this.g.__removeChild(this);\n    this.b.__removeChild(this);\n    this.a.__removeChild(this);\n    super.__detach();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this.r.__makeNative(platformConfig);\n    this.g.__makeNative(platformConfig);\n    this.b.__makeNative(platformConfig);\n    this.a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig(): {...} {\n    return {\n      type: 'color',\n      r: this.r.__getNativeTag(),\n      g: this.g.__getNativeTag(),\n      b: this.b.__getNativeTag(),\n      a: this.a.__getNativeTag(),\n      nativeColor: this.nativeColor,\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}